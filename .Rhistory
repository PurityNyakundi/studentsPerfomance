group_by(gender)%>%
arrange(desc(math.score))%>%
select(gender,math.score)%>%
top_n(10,math.score)%>%
ggplot(st,mapping = aes(gender,math.score))+
geom_col()
ggplot(st,aes(test.preparation.course,fill = gender))+
geom_histogram(stat = "count")+
#check maths perfomance
st%>%
group_by(gender)%>%
arrange(desc(math.score))%>%
select(gender,math.score)%>%
top_n(10,math.score)%>%
ggplot(st,mapping = aes(math.score,fill = gender))+
geom_histogram(stat = "count")
ggplot(st,mapping = aes(math.score,fill = gender))+
geom_histogram(stat = "count")
ggplot(st,aes(test.preparation.course,fill = gender))+
geom_histogram(stat = "count")+
#check maths perfomance
st%>%
group_by(gender)%>%
arrange(desc(math.score))%>%
select(gender,math.score)%>%
top_n(10,math.score)
ggplot(st,mapping = aes(math.score))+
geom_histogram(stat = "count",position = "dodge")
student <- read.csv("StudentsPerformance.csv",stringsAsFactors = FALSE)
student
library(dplyr)
library(tidyverse)
library(ggplot2)
str(student)
student
#check for NA
colSums(is.na(student))
#change some variables to factor
student$race.ethnicity<-as.factor(student$race.ethnicity)
str(student)
head(student)
str(student)
st<-student%>%
group_by(math.score,reading.score, writing.score)%>%
mutate(total_score = math.score+reading.score+ writing.score,
mean_score = (math.score+reading.score+ writing.score)/3)
str(st)
glimpse(st)
#st$gender<-ifelse(st$gender=="female",1,0)
glimpse(st)
#st$gender<-as.factor(st$gender)
glimpse(st)
#EDA
#check the gender balance in this class and the dominating race in the class
ggplot(st,mapping = aes(gender,fill = race.ethnicity))+
geom_histogram(stat = "count",position = "dodge")+
ggtitle("Gender Dominating in class")
#check the most perfoming gender
st%>%
group_by(gender)%>%
arrange(desc(mean_score))%>%
select(gender,mean_score)%>%
top_n(10,wt = mean_score)
st$test.preparation.course<-as.factor(st$test.preparation.course)
ggplot(st,mapping = aes(math.score,fill = gender))+
geom_histogram(stat = "count",position = "dodge")
ggplot(st,mapping = aes(math.score,))+
geom_histogram(stat = "count")
ggplot(st,mapping = aes(math.score,))+
geom_histogram(stat = "count",position = "dodge")
ggplot(st,mapping = aes(math.score,))+
geom_bar(stat = "count",position = "dodge")
ggplot(st,mapping = aes(math.score))+
geom_col(stat = "count",position = "dodge")
ggplot(st,mapping = aes(math.score,gender))+
geom_col(stat = "count",position = "dodge")
ggplot(st,mapping = aes(math.score,gende))+
geom_point(stat = "count",position = "dodge")
ggplot(st,mapping = aes(math.score,gender))+
geom_point(stat = "count",position = "dodge")
ggplot(st,mapping = aes(math.score,gender))+
geom_point(position = "dodge")
ggplot(st,mapping = aes(y = math.score,x = gender))+
geom_col(position = "dodge")
ggplot(st,mapping = aes(math.score))+
geom_bar(stat = "count",position = "dodge")
ggplot(st,mapping = aes(math.score))+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)
ggplot(st,mapping = aes(math.score),fill = "blue")+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)
ggplot(st,mapping = aes(math.score),fill = "blue")+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)+
theme_bw(element_rect(fill = "WHITE", color = "black"))
?theme
ggplot(st,mapping = aes(math.score),fill = "blue")+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)+
theme(element_rect(fill = "WHITE", color = "black"))
ggplot(st,mapping = aes(math.score),fill = "blue")+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)+
ggplot(st,mapping = aes(math.score),fill = "blue")+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)
ggplot(st,mapping = aes(math.score))+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)
#check the summaries
summary(st$test.preparation.course,st$math.score,st$reading.score,st$writing.score)
#check the summaries
summary(st$math.score,st$reading.score,st$writing.score)
#check the summaries
summary(st$math.score)
#check the summaries
summary(st)
student <- read.csv("StudentsPerformance.csv",stringsAsFactors = FALSE)
student
library(dplyr)
library(tidyverse)
library(ggplot2)
str(student)
student
#check for NA
colSums(is.na(student))
#change some variables to factor
student$race.ethnicity<-as.factor(student$race.ethnicity)
str(student)
head(student)
student <- read.csv("StudentsPerformance.csv",stringsAsFactors = FALSE)
student
library(dplyr)
library(tidyverse)
library(ggplot2)
str(student)
student
#check for NA
colSums(is.na(student))
#change some variables to factor
student$race.ethnicity<-as.factor(student$race.ethnicity)
str(student)
head(student)
str(student)
st<-student%>%
group_by(math.score,reading.score, writing.score)%>%
mutate(total_score = math.score+reading.score+ writing.score,
mean_score = (math.score+reading.score+ writing.score)/3)
str(st)
glimpse(st)
st$gender<-ifelse(st$gender=="female",1,0)
glimpse(st)
st$gender<-ifelse(st$gender=="female",1,0)
glimpse(st)
st$gender<-as.factor(st$gender)
glimpse(st)
#EDA
#check the gender balance in this class and the dominating race in the class
ggplot(st,mapping = aes(gender,fill = race.ethnicity))+
geom_histogram(stat = "count",position = "dodge")+
ggtitle("Gender Dominating in class")
#check the most perfoming gender
st%>%
group_by(gender)%>%
arrange(desc(mean_score))%>%
select(gender,mean_score)%>%
top_n(10,wt = mean_score)
st$test.preparation.course<-as.factor(st$test.preparation.course)
glimpse(st)
str(st)
ggplot(st,aes(test.preparation.course,fill = gender))+
geom_histogram(stat = "count")+
#check maths perfomance
st%>%
group_by(gender)%>%
arrange(desc(math.score))%>%
select(gender,math.score)%>%
top_n(10,math.score)
ggplot(st,mapping = aes(math.score))+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)
#check the summaries
summary(st)
train<-st[1:500,]
test<-st[501:1000,]
md<-lm(mean.score~gender+total.score+math.score+reading.score+writing.score,data = train)
md<-lm(mean_score~gender+total.score+math.score+reading.score+writing.score,data = train)
md<-lm(mean_score~gender+total_score+math.score+reading.score+writing.score,data = train)
student <- read.csv("StudentsPerformance.csv",stringsAsFactors = FALSE)
student
library(dplyr)
library(tidyverse)
library(ggplot2)
str(student)
student
#check for NA
colSums(is.na(student))
#change some variables to factor
student$race.ethnicity<-as.factor(student$race.ethnicity)
str(student)
head(student)
str(student)
st<-student%>%
group_by(math.score,reading.score, writing.score)%>%
mutate(total_score = math.score+reading.score+ writing.score,
mean_score = (math.score+reading.score+ writing.score)/3)
str(st)
glimpse(st)
st$gender<-ifelse(st$gender=="female",1,0)
glimpse(st)
st$gender<-as.factor(st$gender)
glimpse(st)
#EDA
#check the gender balance in this class and the dominating race in the class
ggplot(st,mapping = aes(gender,fill = race.ethnicity))+
geom_histogram(stat = "count",position = "dodge")+
ggtitle("Gender Dominating in class")
#check the most perfoming gender
st%>%
group_by(gender)%>%
arrange(desc(mean_score))%>%
select(gender,mean_score)%>%
top_n(10,wt = mean_score)
st$test.preparation.course<-as.factor(st$test.preparation.course)
glimpse(st)
str(st)
ggplot(st,aes(test.preparation.course,fill = gender))+
geom_histogram(stat = "count")+
#check maths perfomance
st%>%
group_by(gender)%>%
arrange(desc(math.score))%>%
select(gender,math.score)%>%
top_n(10,math.score)
ggplot(st,mapping = aes(math.score))+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)
#check the summaries
summary(st)
train<-st[1:500,]
test<-st[501:1000,]
md<-lm(mean_score~gender+total_score+math.score+reading.score+writing.score,data = train)
md
summary(md)
md<-lm(mean_score~gender+total_score+math.score+reading.score+train$writing.score,data = train)
summary(md)
md<-lm(mean_score~math.score+reading.score+train$writing.score,data = train)
summary(md)
train<-st[1:500,c(-1,-2,-3,-4,-5)]
test<-st[501:1000,c(-1,-2,-3,-4,-5)]
md<-lm(mean_score~.,data = train)
summary(md)
train<-st[1:500,c(-2,-3,-4,-5)]
test<-st[501:1000,c(-2,-3,-4,-5)]
md<-lm(mean_score~.,data = train)
summary(md)
student <- read.csv("StudentsPerformance.csv",stringsAsFactors = FALSE)
student
library(dplyr)
library(tidyverse)
library(ggplot2)
str(student)
student
#check for NA
colSums(is.na(student))
#change some variables to factor
student$race.ethnicity<-as.factor(student$race.ethnicity)
str(student)
head(student)
str(student)
st<-student%>%
group_by(math.score,reading.score, writing.score)%>%
mutate(total_score = math.score+reading.score+ writing.score,
mean_score = (math.score+reading.score+ writing.score)/3)
str(st)
glimpse(st)
st$gender<-ifelse(st$gender=="female",1,0)
glimpse(st)
st$gender<-as.factor(st$gender)
glimpse(st)
#EDA
#check the gender balance in this class and the dominating race in the class
ggplot(st,mapping = aes(gender,fill = race.ethnicity))+
geom_histogram(stat = "count",position = "dodge")+
ggtitle("Gender Dominating in class")
#check the most perfoming gender
st%>%
group_by(gender)%>%
arrange(desc(mean_score))%>%
select(gender,mean_score)%>%
top_n(10,wt = mean_score)
st$test.preparation.course<-as.factor(st$test.preparation.course)
glimpse(st)
str(st)
ggplot(st,aes(test.preparation.course,fill = gender))+
geom_histogram(stat = "count")+
#check maths perfomance
st%>%
group_by(gender)%>%
arrange(desc(math.score))%>%
select(gender,math.score)%>%
top_n(10,math.score)
ggplot(st,mapping = aes(math.score))+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)
#check the summaries
summary(st)
train<-st[1:500,c(-2,-3,-4,-5)]
test<-st[501:1000,c(-2,-3,-4,-5)]
md<-glm(gender~.,data = train,family = "binomial")
summary(md)
md<-glm(gender~.,data = train,family = "binomial")
pr<-predict(md,test,type = "class")
md<-glm(gender~.,data = train,family = "binomial")
pr<-predict(md,test,type = "response")
pred<-ifelse(pr>0.56,1,0)
y_predq<-factor(pred,levels = c(0,1))
table(y_predq,test$gender)
mean(y_predq==y_predq)
mean(y_predq==test$gender)
md<-glm(gender~.,data = train,family = "binomial")
pr<-predict(md,test,type = "response")
md<-glm(gender~.,data = train,family = "binomial")
pr<-predict(md,test,method= "response")
pred<-ifelse(pr>0.56,1,0)
y_predq<-factor(pred,levels = c(0,1))
table(y_predq,test$gender)
mean(y_predq==test$gender)
student <- read.csv("StudentsPerformance.csv",stringsAsFactors = FALSE)
student
library(dplyr)
library(tidyverse)
library(ggplot2)
str(student)
student
#check for NA
colSums(is.na(student))
#change some variables to factor
student$race.ethnicity<-as.factor(student$race.ethnicity)
str(student)
head(student)
str(student)
st<-student%>%
group_by(math.score,reading.score, writing.score)%>%
mutate(total_score = math.score+reading.score+ writing.score,
mean_score = (math.score+reading.score+ writing.score)/3)
str(st)
glimpse(st)
st$gender<-ifelse(st$gender=="female",1,0)
glimpse(st)
#change the male and female
view(st)
train<-st[1:500,c(-2,-3,-4,-5)]
view(train)
view(gender)
view(test)
md<-glm(gender~.,data = train,family = "binomial")
pr<-predict(md,test,method= "response")
md<-glm(gender~.,data = train,family = "binomial")
pr<-predict(md,test,method= "response")
pred<-ifelse(pr>0.56,1,0)
y_predq<-factor(pred,levels = c(0,1))
table(y_predq,test$gender)
mean(y_predq==test$gender)
summary(md)
md<-glm(gender~math.score+reading.score+writing.score+total.score+mean.score,data = train,family = "binomial")
md<-glm(gender~math.score+reading.score+writing.score+total_score+mean_score,data = train,family = "binomial")
pr<-predict(md,test,method= "response")
pred<-ifelse(pr>0.56,1,0)
y_predq<-factor(pred,levels = c(0,1))
table(y_predq,test$gender)
mean(y_predq==test$gender)
summary(md)
mean(test$gender==pred)
#change the male and female
view(st)
student <- read.csv("StudentsPerformance.csv",stringsAsFactors = FALSE)
student
library(dplyr)
library(tidyverse)
library(ggplot2)
str(student)
student
#check for NA
colSums(is.na(student))
#change some variables to factor
student$race.ethnicity<-as.factor(student$race.ethnicity)
str(student)
head(student)
str(student)
st<-student%>%
group_by(math.score,reading.score, writing.score)%>%
mutate(total_score = math.score+reading.score+ writing.score,
mean_score = (math.score+reading.score+ writing.score)/3)
str(st)
glimpse(st)
#change the male and female
view(st)
st$gender<-ifelse(st$gender=="female",1,0)
glimpse(st)
st$gender<-as.factor(st$gender)
glimpse(st)
#EDA
#check the gender balance in this class and the dominating race in the class
ggplot(st,mapping = aes(gender,fill = race.ethnicity))+
geom_histogram(stat = "count",position = "dodge")+
ggtitle("Gender Dominating in class")
#check the most perfoming gender
st%>%
group_by(gender)%>%
arrange(desc(mean_score))%>%
select(gender,mean_score)%>%
top_n(10,wt = mean_score)
st$test.preparation.course<-as.factor(st$test.preparation.course)
glimpse(st)
str(st)
ggplot(st,aes(test.preparation.course,fill = gender))+
geom_histogram(stat = "count")+
#check maths perfomance
st%>%
group_by(gender)%>%
arrange(desc(math.score))%>%
select(gender,math.score)%>%
top_n(10,math.score)
ggplot(st,mapping = aes(math.score))+
geom_bar(stat = "count",position = "dodge")+
facet_wrap(~gender)
#check the summaries
summary(st)
train<-st[1:500,c(-2,-3,-4,-5)]
view(train)
#change the male and female
view(st)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
data_nom<-as.data.frame(lapply(st[6:10],normalize))
view(label_train)
label_train<-st[1:500,1]
view(label_train)
summary(data_nom)
kmodel<-knn(data_nom_train,data_nom_test,cl = label_train)
#now  we train our model
library(class)
kmodel<-knn(data_nom_train,data_nom_test,cl = label_train)
data_nom<-as.data.frame(lapply(st[6:10],normalize))
#independent variables
data_nom_train<-data_nom[1:500,]
data_nom_test<-data_nom[501:1000,]
label_train<-st[1:500,1]
view(label_train)
label_test<-st[501:1000,1]
summary(data_nom)
#now  we train our model
library(class)
kmodel<-knn(data_nom_train,data_nom_test,cl = label_train)
?knn
#independent variables
data_nom_train<-data_nom[1:500,]
view(data_nom_train)
data_nom_test<-data_nom[501:1000,]
label_train<-st[1:500,1]
view(label_train)
label_test<-st[501:1000,1]
summary(data_nom)
#now  we train our model
library(class)
kmodel<-knn(data_nom_train,data_nom_test,cl = label_train)
data_nom<-as.data.frame(lapply(st[6:10],normalize))
#independent variables
data_nom_train<-data_nom[1:500,]
view(data_nom_train)
view(data_nom_test)
label_train<-st[1:500,1]
view(label_train)
label_test<-st[501:1000,1]
summary(data_nom)
#now  we train our model
library(class)
kmodel<-knn(data_nom_train,data_nom_test,cl = label_train)
?ranger
library(ranger)
ramodel<-ranger()
?ranger
#an error but can't understand
cbind(data_nom_train,label_train)
ramodel<-ranger(gender~.,data = rtrain,num.trees = 500,respect.unordered.factors = "order")
#now  we train our model
library(class)
kmodel<-knn(data_nom_train,data_nom_test,cl = label_train)
#an error but can't understand
rtrain<-cbind(data_nom_train,label_train)
rtest<-cbind(data_nom_test,label_test)
library(ranger)
ramodel<-ranger(gender~.,data = rtrain,num.trees = 500,respect.unordered.factors = "order")
summary(ramodel)
rpred<-predict(ramodel,rtest)
table(rpred,test$gender)
library(ranger)
ramodel<-ranger(gender~.,data = rtrain,num.trees = 500,respect.unordered.factors = "order")
summary(ramodel)
rpred<-predict(ramodel,rtest)
table(rpred,test$gender)
mean(rpred==test$gender)
ramodel<-ranger(gender~.,data = rtrain,num.trees = 500,respect.unordered.factors = "order")
summary(ramodel)
rpred<-predict(ramodel,rtest)
mean(rpred==test$gender)
rpred
mean(rpred==test$gender)
table(rpred,test$gender)
